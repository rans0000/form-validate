!function(a,b,c,d){"use strict";var e={init:function(b,c){var d=this;d.formElement=b,d.$formElement=a(b),d.options=a.extend({},a.fn.formValidate.options,c),d.$inputs=d.$formElement.find("["+d.options.attributeUsed+"]"),d.formName=d.$formElement.attr("name"),d.formErrorList=[],d.isFormValid=!0,d.isInlineInputsValid=!0,d.appName="formValidate",d.appVersion="0.1.0",d.$formElement.data(d.appName,d),d.bindEvents()},bindEvents:function(){var b=this;b.$inputs.on(b.options.triggerUsed,function(){b.validateInput(a(this))}),b.$formElement.on("submit",function(a){a.preventDefault(),b.validateAllInputs()})},validateAllInputs:function(){var b,c,d=this,e=!0;d.$inputs.each(function(b,c){d.validateInput(a(c))||(e=!1)}),d.isInlineInputsValid=e,b=d.$inputs.filter(".invalid").eq(0),d.options.scroll&&d.scrollToElement(b),d.options.focusFirstField&&d.setFocusToInput(b),d.options.asyncURL&&d.options.asyncPattern&&(c="["+d.options.attributeUsed+'="async"]',b=d.$formElement.find(c).eq(0),b.length&&d.validateAsync(d.options.asyncURL,b.val()).then(function(a){d.onAsyncValidationSucces(a,e)},function(a){d.onAsyncValidationFailure(a,e)}))},validateInput:function(b){var c,d,e,f,g,h=this,i=b.attr(h.options.attributeUsed).toLowerCase().split(","),j=a.fn.formValidate.validationRules,k=[],l=b.val(),m=!0;for(g=j.length-1;g>=0;--g)for(c=j[g].pattern,f=i.length-1;f>=0;--f)j[g].name==i[f].trim()&&(e=j[g].hasOwnProperty("trim")&&j[g].trim?l.trim():l,d=""===e&&"required"!==j[g].name?!0:c.test(e),d?h.toggleInputValidationClass(b,i[f],!0,m):(m=!1,h.isFormValid=!1,h.isInlineInputsValid=!1,h.toggleInputValidationClass(b,i[f],!1,m),k.push(j[g].errorMessage)));return h.updateErrorMessages(b,k),m},validateAsync:function(c,d){var e=new a.Deferred;return c=encodeURI(c),d=encodeURIComponent(d),b.setTimeout(function(){d=decodeURIComponent(d),-1!==d.search(/\d/)&&-1!==d.search("[a-z]")&&-1!==d.search("[A-Z]")&&d.length>5?e.resolve(!0):e.reject(!1)}),e.promise()},onAsyncValidationSucces:function(a,b){var c,d,e=this;e.isFormValid=a&&b,e.toggleFormValidationClass(e.isFormValid),e.$formElement.trigger("formValidate/submit",e),c="["+e.options.attributeUsed+'="async"]',d=e.$formElement.find(c).eq(0),e.toggleInputValidationClass(d,"async",a,a)},onAsyncValidationFailure:function(a,b){var c,d,e=this;e.isFormValid=a&&b,e.toggleFormValidationClass(e.isFormValid),c="["+e.options.attributeUsed+'="async"]',d=e.$formElement.find(c).eq(0),e.toggleInputValidationClass(d,"async",a,a),e.updateErrorMessages(d,["Must be at least 6 characters long, and contain at least one number, one uppercase and one lowercase letter."])},toggleInputValidationClass:function(a,b,c,d){c?a.addClass(b+"-valid").removeClass(b+"-invalid"):a.addClass(b+"-invalid").removeClass(b+"-valid"),a.toggleClass("valid",d).toggleClass("invalid",!d)},toggleFormValidationClass:function(a){var b=this;b.$formElement.toggleClass("valid",a).toggleClass("invalid",!a)},updateErrorMessages:function(b,c){var d,e,f=this,g=a();if(f.formName&&b.attr("name")){d=f.formName+"."+b.attr("name"),a('[data-formmsg="'+d+'"]').text(c.join(". ")),f.formErrorList[d]=c;for(var h in f.formErrorList)if(f.formErrorList.hasOwnProperty(h))for(e=f.formErrorList[h].length-1;e>=0;--e)g=g.add('<p class="err-item">'+h+" : "+f.formErrorList[h].join(", ")+"</p>");a('[data-formmsg="'+f.formName+'"]').empty().append(g)}},scrollToElement:function(b){b.length&&a("body").animate({scrollTop:b.offset().top-10},300)},setFocusToInput:function(a){a.focus()}};a.fn.formValidate=function(a){return this.each(function(){var b=Object.create(e);b.init(this,a)})},a.fn.formValidate.options={attributeUsed:"data-formvalidate",triggerUsed:"blur",scroll:!0,focusFirstField:!0,hideErrorOnChange:!1,skipHiddenFields:!0,asyncPattern:!0,asyncURL:""},a.fn.formValidate.validationRules=[{name:"number",errorMessage:"Entry must be a Number.",pattern:/^[-+]?\d*\.?\d+$/,trim:!1},{name:"required",errorMessage:"Entry is mandatory.",pattern:/.+/,trim:!0},{name:"email",errorMessage:"Entry must be an email.",pattern:/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i,trim:!1}],a.fn.formValidate.addRules=function(b){a.fn.formValidate.validationRules.push(b)},a.formValidate=a.fn.formValidate,a(c).on("ready",function(){a("form").has("["+a.fn.formValidate.options.attributeUsed+"]").each(function(b,c){a(c).data("formValidate")||a(c).formValidate()})})}(jQuery,window,document);