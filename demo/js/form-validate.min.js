!function(a,b,c,d){"use strict";var e={init:function(b,c){var d=this;d.formElement=b,d.$formElement=a(b),d.options=a.extend({},a.fn.formValidate.options,c),d.$inputs=d.$formElement.find("["+d.options.attributeUsed+"]"),d.bindEvents()},bindEvents:function(){var b=this;b.$inputs.on(b.options.triggerUsed,function(){b.startValidation(a(this))})},startValidation:function(b){var c,d,e,f,g=this,h=b.attr(g.options.attributeUsed).toLowerCase().split(","),i=a.fn.formValidate.validationRules,j=b.val(),k=!0;for(console.log(h),f=i.length-1;f>=0;--f)for(c=i[f].pattern,e=h.length-1;e>=0;--e)i[f].name==h[e].trim()&&(d=i[f].hasOwnProperty("trim")&&i[f].trim?j.trim():j,c.test(d)?g.testPassed(b,h[e],k):(k=!1,g.testFailed(b,h[e],k)))},testFailed:function(a,b,c){a.addClass(b+"-invalid").removeClass(b+"-valid"),a.toggleClass("valid",c).toggleClass("invalid",!c)},testPassed:function(a,b,c){a.addClass(b+"-valid").removeClass(b+"-invalid"),a.toggleClass("valid",c).toggleClass("invalid",!c)}};a.fn.formValidate=function(a){return this.each(function(){var b=Object.create(e);b.init(this,a)})},a.fn.formValidate.options={attributeUsed:"data-formvalidate",triggerUsed:"blur",scroll:!0,focusFirstField:!0,hideErrorOnChange:!1,skipHiddenFields:!0,asyncPattern:!0,asyncUrl:""},a.fn.formValidate.validationRules=[{name:"number",errorMessage:"Entry must be a Number.",pattern:/^[-+]?\d*\.?\d+$/,trim:!1},{name:"required",errorMessage:"Entry mustn't be empty",pattern:/.+/,trim:!0}]}(jQuery,window,document);